# Magic behaviour with __get, __set, __call and __callStatic is not exactly static analyser-friendly :)
# Fortunately, You can ingore it by the following config.
#
rules:
  - PHPStan\Rules\Arrays\DeadForeachRule
  - PHPStan\Rules\TooWideTypehints\TooWideArrowFunctionReturnTypehintRule
  - PHPStan\Rules\TooWideTypehints\TooWideClosureReturnTypehintRule
  - PHPStan\Rules\TooWideTypehints\TooWideFunctionReturnTypehintRule
  - PHPStan\Rules\Exceptions\DeadCatchRule
  - PHPStan\Rules\DeadCode\NoopRule
  - PHPStan\Rules\DeadCode\UnreachableStatementRule
  - PHPStan\Rules\Arrays\AppendedArrayItemTypeRule
  - PHPStan\Rules\Arrays\IterableInForeachRule
  - PHPStan\Rules\Arrays\OffsetAccessAssignmentRule
  - PHPStan\Rules\Arrays\OffsetAccessAssignOpRule
  - PHPStan\Rules\Arrays\OffsetAccessValueAssignmentRule
  - PHPStan\Rules\Arrays\UnpackIterableInArrayRule
  - PHPStan\Rules\Functions\ArrowFunctionReturnTypeRule
  - PHPStan\Rules\Functions\ClosureReturnTypeRule
  - PHPStan\Rules\Functions\ReturnTypeRule
  - PHPStan\Rules\Generators\YieldTypeRule
  - PHPStan\Rules\Methods\ReturnTypeRule
  - PHPStan\Rules\Properties\DefaultValueTypesAssignedToPropertiesRule
  - PHPStan\Rules\Properties\TypesAssignedToPropertiesRule
  - PHPStan\Rules\Variables\ThrowTypeRule
  - PHPStan\Rules\Variables\VariableCloningRule
  - PHPStan\Rules\Cast\EchoRule
  - PHPStan\Rules\Cast\InvalidCastRule
  - PHPStan\Rules\Cast\InvalidPartOfEncapsedStringRule
  - PHPStan\Rules\Cast\PrintRule
  - PHPStan\Rules\Functions\IncompatibleDefaultParameterTypeRule
  - PHPStan\Rules\Generics\ClassAncestorsRule
  - PHPStan\Rules\Generics\ClassTemplateTypeRule
  - PHPStan\Rules\Generics\FunctionTemplateTypeRule
  - PHPStan\Rules\Generics\FunctionSignatureVarianceRule
  - PHPStan\Rules\Generics\InterfaceAncestorsRule
  - PHPStan\Rules\Generics\InterfaceTemplateTypeRule
  - PHPStan\Rules\Generics\MethodTemplateTypeRule
  - PHPStan\Rules\Generics\MethodSignatureVarianceRule
  - PHPStan\Rules\Generics\TraitTemplateTypeRule
  - PHPStan\Rules\Methods\IncompatibleDefaultParameterTypeRule
  - PHPStan\Rules\Operators\InvalidBinaryOperationRule
  - PHPStan\Rules\Operators\InvalidUnaryOperationRule
  - PHPStan\Rules\Operators\InvalidComparisonOperationRule
  - PHPStan\Rules\PhpDoc\IncompatiblePhpDocTypeRule
  - PHPStan\Rules\PhpDoc\IncompatiblePropertyPhpDocTypeRule
  - PHPStan\Rules\PhpDoc\InvalidPhpDocTagValueRule
  - PHPStan\Rules\PhpDoc\InvalidPHPStanDocTagRule
  - PHPStan\Rules\PhpDoc\InvalidThrowsPhpDocValueRule
  - PHPStan\Rules\PhpDoc\WrongVariableNameInVarTagRule
  - PHPStan\Rules\Classes\UnusedConstructorParametersRule
  - PHPStan\Rules\Constants\ConstantRule
  - PHPStan\Rules\Functions\UnusedClosureUsesRule
  - PHPStan\Rules\Variables\VariableCertaintyInIssetRule
  - PHPStan\Rules\Arrays\DuplicateKeysInLiteralArraysRule
  - PHPStan\Rules\Arrays\OffsetAccessWithoutDimForReadingRule
  - PHPStan\Rules\Classes\ClassConstantDeclarationRule
  - PHPStan\Rules\Classes\ClassConstantRule
  - PHPStan\Rules\Classes\ExistingClassesInClassImplementsRule
  - PHPStan\Rules\Classes\ExistingClassesInInterfaceExtendsRule
  - PHPStan\Rules\Classes\ExistingClassInClassExtendsRule
  - PHPStan\Rules\Classes\ExistingClassInTraitUseRule
  - PHPStan\Rules\Classes\InstantiationRule
  - PHPStan\Rules\Functions\CallToFunctionParametersRule
  - PHPStan\Rules\Functions\ExistingClassesInArrowFunctionTypehintsRule
  - PHPStan\Rules\Functions\ExistingClassesInClosureTypehintsRule
  - PHPStan\Rules\Functions\ExistingClassesInTypehintsRule
  - PHPStan\Rules\Functions\InnerFunctionRule
  - PHPStan\Rules\Functions\NonExistentDefinedFunctionRule
  - PHPStan\Rules\Functions\PrintfParametersRule
  - PHPStan\Rules\Methods\ExistingClassesInTypehintsRule
  - PHPStan\Rules\Properties\AccessPropertiesInAssignRule
  - PHPStan\Rules\Properties\AccessStaticPropertiesInAssignRule
  - PHPStan\Rules\Variables\ThisVariableRule
  - PHPStan\Rules\Variables\UnsetRule

parameters:
  bootstrap: "bootstrap.php"
  checkFunctionArgumentTypes: true
  checkArgumentsPassedByReference: true
  reportUnmatchedIgnoredErrors: false
  ignoreErrors:
    - "#will always evaluate to false#"
    - "#Call to an undefined method ReflectionType::getName()#"
  excludes_analyse:
    - %currentWorkingDirectory%/src/*/tests/*
  checkAlwaysTrueInstanceof: false
  treatPhpDocTypesAsCertain: false
  checkClassCaseSensitivity: true
  checkThisOnly: false
  checkPhpDocMissingReturn: true
  checkMaybeUndefinedVariables: true
  checkExtraArguments: true
  reportMagicMethods: true
  reportMagicProperties: true
  customRulesetUsed: false
  missingClosureNativeReturnCheckObjectTypehint: false

parametersSchema:
  missingClosureNativeReturnCheckObjectTypehint: bool()

conditionalTags:
  PHPStan\Rules\Variables\VariableCertaintyNullCoalesceRule:
    phpstan.rules.rule: %featureToggles.nullCoalesce%
  PHPStan\Rules\Functions\ClosureUsesThisRule:
    phpstan.rules.rule: %featureToggles.closureUsesThis%
  PHPStan\Rules\Missing\MissingClosureNativeReturnTypehintRule:
    phpstan.rules.rule: %checkMissingClosureNativeReturnTypehintRule%

services:
  -
    class: PHPStan\Rules\Classes\ImpossibleInstanceOfRule
    arguments:
      checkAlwaysTrueInstanceof: %checkAlwaysTrueInstanceof%
      treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Comparison\ImpossibleCheckTypeFunctionCallRule
    arguments:
      checkAlwaysTrueCheckTypeFunctionCall: %checkAlwaysTrueCheckTypeFunctionCall%
      treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Comparison\ImpossibleCheckTypeMethodCallRule
    arguments:
      checkAlwaysTrueCheckTypeFunctionCall: %checkAlwaysTrueCheckTypeFunctionCall%
      treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Comparison\ImpossibleCheckTypeStaticMethodCallRule
    arguments:
      checkAlwaysTrueCheckTypeFunctionCall: %checkAlwaysTrueCheckTypeFunctionCall%
      treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Comparison\StrictComparisonOfDifferentTypesRule
    arguments:
      checkAlwaysTrueStrictComparison: %checkAlwaysTrueStrictComparison%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Exceptions\DeadCatchRule

  -
    class: PHPStan\Rules\DeadCode\NoopRule

  -
    class: PHPStan\Rules\DeadCode\UnreachableStatementRule

  -
    class: PHPStan\Rules\Comparison\BooleanOrConstantConditionRule
    arguments:
      treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Comparison\ElseIfConstantConditionRule
    arguments:
      treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Comparison\IfConstantConditionRule
    arguments:
      treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Comparison\TernaryOperatorConstantConditionRule
    arguments:
      treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Arrays\AppendedArrayKeyTypeRule
    arguments:
      checkUnionTypes: %checkUnionTypes%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Arrays\InvalidKeyInArrayDimFetchRule
    arguments:
      reportMaybes: %reportMaybes%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Arrays\InvalidKeyInArrayItemRule
    arguments:
      reportMaybes: %reportMaybes%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Arrays\NonexistentOffsetInArrayDimFetchRule
    arguments:
      reportMaybes: %reportMaybes%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Generators\YieldFromTypeRule
    arguments:
      reportMaybes: %reportMaybes%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Generators\YieldInGeneratorRule
    arguments:
      reportMaybes: %reportMaybes%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Methods\MethodSignatureRule
    arguments:
      reportMaybes: %reportMaybesInMethodSignatures%
      reportStatic: %reportStaticMethodSignatures%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Functions\CallCallablesRule
    arguments:
      reportMaybes: %reportMaybes%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\PhpDoc\InvalidPhpDocVarTagTypeRule
    arguments:
      checkClassCaseSensitivity: %checkClassCaseSensitivity%
      checkMissingVarTagTypehint: %checkMissingVarTagTypehint%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Variables\VariableCertaintyNullCoalesceRule

  -
    class: PHPStan\Rules\Classes\ExistingClassInInstanceOfRule
    tags:
      - phpstan.rules.rule

    arguments:
      checkClassCaseSensitivity: %checkClassCaseSensitivity%

  -
    class: PHPStan\Rules\Exceptions\CaughtExceptionExistenceRule
    tags:
      - phpstan.rules.rule

    arguments:
      checkClassCaseSensitivity: %checkClassCaseSensitivity%

  -
    class: PHPStan\Rules\Functions\CallToNonExistentFunctionRule
    tags:
      - phpstan.rules.rule

    arguments:
      checkFunctionNameCase: %checkFunctionNameCase%

  -
    class: PHPStan\Rules\Functions\ClosureUsesThisRule

  -
    class: PHPStan\Rules\Methods\CallMethodsRule
    tags:
      - phpstan.rules.rule

    arguments:
      checkFunctionNameCase: %checkFunctionNameCase%
      reportMagicMethods: %reportMagicMethods%

  -
    class: PHPStan\Rules\Methods\CallStaticMethodsRule
    tags:
      - phpstan.rules.rule

    arguments:
      checkFunctionNameCase: %checkFunctionNameCase%
      reportMagicMethods: %reportMagicMethods%

  -
    class: PHPStan\Rules\Missing\MissingClosureNativeReturnTypehintRule
    arguments:
      checkObjectTypehint: %missingClosureNativeReturnCheckObjectTypehint%

  -
    class: PHPStan\Rules\Missing\MissingReturnRule
    arguments:
      checkExplicitMixedMissingReturn: %checkExplicitMixedMissingReturn%
      checkPhpDocMissingReturn: %checkPhpDocMissingReturn%

    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Namespaces\ExistingNamesInGroupUseRule
    tags:
      - phpstan.rules.rule

    arguments:
      checkFunctionNameCase: %checkFunctionNameCase%

  -
    class: PHPStan\Rules\Namespaces\ExistingNamesInUseRule
    tags:
      - phpstan.rules.rule

    arguments:
      checkFunctionNameCase: %checkFunctionNameCase%

  -
    class: PHPStan\Rules\Operators\InvalidIncDecOperationRule
    tags:
      - phpstan.rules.rule

    arguments:
      checkThisOnly: %checkThisOnly%

  -
    class: PHPStan\Rules\Properties\AccessPropertiesRule
    tags:
      - phpstan.rules.rule

    arguments:
      reportMagicProperties: %reportMagicProperties%

  -
    class: PHPStan\Rules\Properties\AccessStaticPropertiesRule
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Properties\ExistingClassesInPropertiesRule
    arguments:
      checkClassCaseSensitivity: %checkClassCaseSensitivity%
      checkThisOnly: %checkThisOnly%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Properties\WritingToReadOnlyPropertiesRule
    arguments:
      checkThisOnly: %checkThisOnly%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Properties\ReadingWriteOnlyPropertiesRule
    arguments:
      checkThisOnly: %checkThisOnly%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Variables\CompactVariablesRule
    arguments:
      checkMaybeUndefinedVariables: %checkMaybeUndefinedVariables%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Variables\DefinedVariableRule
    arguments:
      cliArgumentsVariablesRegistered: %cliArgumentsVariablesRegistered%
      checkMaybeUndefinedVariables: %checkMaybeUndefinedVariables%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Variables\DefinedVariableInAnonymousFunctionUseRule
    arguments:
      checkMaybeUndefinedVariables: %checkMaybeUndefinedVariables%
    tags:
      - phpstan.rules.rule

  -
    class: PHPStan\Rules\Regexp\RegularExpressionPatternRule
    tags:
      - phpstan.rules.rule

